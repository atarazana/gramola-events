
#################################
## BEGIN: Data Base related properties
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${DB_HOST}:5432/${DB_NAME}
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = ${DB_USER}
%prod.quarkus.datasource.password = ${DB_PASSWORD}
%prod.db.type = PostgreSQL

%dev.quarkus.datasource.jdbc.url = jdbc:h2:mem:myDB
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.username = username-default
%dev.db.type = H2

%test.quarkus.datasource.jdbc.url = jdbc:h2:mem:myDB
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username = username-default
%test.db.type = H2

## drop and create the database at startup (use `update` to only update the schema)
%prod.quarkus.hibernate-orm.database.generation = create
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.sql-load-script = import.sql
## show sql statements in log
quarkus.hibernate-orm.log.sql = true

## END: Data Base related properties
#################################

#################################
## START: Kubernetes related properties
# Kubernetes Client
quarkus.kubernetes-client.trust-certs = true
quarkus.kubernetes-client.namespace = ${PROJECT_NAME:gramola-events-dev}

# Only generate OpenShift descriptors
quarkus.kubernetes.deployment-target = openshift

# Expose the service when deployed
quarkus.openshift.route.expose = true

# Annotations and labels
quarkus.openshift.annotations."app.openshift.io/connects-to"=events-database
quarkus.openshift.part-of=gramola-app
quarkus.openshift.name=events

quarkus.openshift.env.secrets = events-database-secret
## END: Kubernetes related properties
#################################
